#!/usr/bin/env bash
#
# git-update ‚Äî mise √† jour simplifi√©e d‚Äôun d√©p√¥t Git local
# Usage:
#   git-update [-y] [commit-message]
#   -y              : ex√©cute sans confirmation
#   commit-message  : message √† utiliser pour le commit si n√©cessaire
#

die() {
  echo >&2 "Erreur¬†: $*"
  exit 1
}

AUTO=false
COMMIT_MSG=""

# Parse options
while [[ "$1" == -* ]]; do
  case "$1" in
    -y)
      AUTO=true
      shift
      ;;
    *)
      die "Option inconnue¬†: $1"
      ;;
  esac
done

# Si reste un param, c'est le message de commit
if [ -n "$1" ]; then
  COMMIT_MSG="$1"
fi

git rev-parse --is-inside-work-tree &>/dev/null || die "Pas dans un d√©p√¥t Git¬†!"

# 1Ô∏è‚É£ Changements locaux
output=$(git status --porcelain)
if [ -n "$output" ]; then
  echo "üõ†Ô∏è  Changements locaux d√©tect√©s¬†:"
  git status -s
  if [ "$AUTO" = true ]; then
    echo "‚û§ mode automatique : staging, commit + push"
    git add -A
    if [ -z "$COMMIT_MSG" ]; then
      COMMIT_MSG="Mise √† jour locale automatis√©e"
    fi
    git commit -m "$COMMIT_MSG" || die "√âchec du commit."
    git push || die "√âchec du push."
  else
    read -p "Faire 'git add -A', commit et push ? [Y/n] " REPLY
    REPLY=${REPLY:-Y}
    if [[ $REPLY =~ ^[Yy] ]]; then
      git add -A
      read -p "Message de commit¬†: " MSG
      MSG=${MSG:-"Mise √† jour locale"}
      git commit -m "$MSG" || die "√âchec du commit."
      git push || die "√âchec du push."
    else
      echo "‚û°Ô∏è  Ignor√© : pense √† commit + push manuellement."
    fi
  fi
fi

# 2Ô∏è‚É£ Synchronisation distante
echo "‚Üí fetch distant..."
git fetch --prune || die "Fetch √©chou√©."

LOCAL=$(git rev-parse @) || die
REMOTE=$(git rev-parse @{u}) || die "Branche distante non suivie."
BASE=$(git merge-base @ @{u}) || die

if [ "$LOCAL" = "$REMOTE" ]; then
  echo "‚úÖ Branche √† jour."
elif [ "$LOCAL" = "$BASE" ]; then
  echo "‚¨áÔ∏è  Changements distants trouv√©s."
  if [ "$AUTO" = true ]; then
    echo "‚û§ mode auto : pull --rebase"
    git pull --rebase || die "Pull √©chou√©."
  else
    read -p "Faire git pull --rebase ? [Y/n] " REPLY
    REPLY=${REPLY:-Y}
    if [[ $REPLY =~ ^[Yy] ]]; then
      git pull --rebase || die "Pull √©chou√©."
    fi
  fi
elif [ "$REMOTE" = "$BASE" ]; then
  echo "‚¨ÜÔ∏è  Commits locaux poussables."
  if [ "$AUTO" = true ]; then
    echo "‚û§ mode auto : push"
    git push || die "Push √©chou√©."
  else
    read -p "Faire git push ? [Y/n] " REPLY
    REPLY=${REPLY:-Y}
    if [[ $REPLY =~ ^[Yy] ]]; then
      git push || die "Push √©chou√©."
    fi
  fi
else
  echo "‚ö†Ô∏è  Divergence (locaux + distants). G√©rer manuellement."
  exit 1
fi

echo "üßπ Prune branches distantes supprim√©es..."
git remote prune origin

